@mixin respond($breakpoint) {
    @media  screen and (min-width: map-get($breakpoints, $breakpoint)){@content}
};


// clear both
@mixin clear {
    &::after {
        content: '';
        display: block;
        clear: both;
    }
};


// :link , :visited
@mixin link {
    &:link,
    &:visited {
        @content
    }
};


@mixin position-all($grow) {
    left: $grow;
    right: $grow;
    top: $grow;
    bottom: $grow;
}

// btn
@mixin btn-base($shadow-border:true,$b-radius-level:0,$f-size-level:2,$p-tb:1.2rem,$p-rl:1.8rem) {
    &:link,
    &:visited {
        display: inline-block;
        text-decoration: none;
        color: #000;
        font-size: nth($font-size,$f-size-level);
        padding: $p-tb $p-rl;
        @if $shadow-border {box-shadow: 0 0 0 1px #000;}
        @if $b-radius-level > 0 {border-radius: nth($border-radius , $b-radius-level);}
    }
};

@mixin btn-base-button($shadow-border:true,$b-radius-level:0,$f-size-level:2,$p-tb:1.2rem,$p-rl:1.8rem) {
    border: none;
    background: #fff;
    font-size: nth($font-size,$f-size-level);
    padding: $p-tb $p-rl;
    @if $shadow-border {box-shadow: 0 0 0 1px #000;}
    @if $b-radius-level > 0 {border-radius: nth($border-radius , $b-radius-level);}
}


@mixin btn-arrow($size:30px) {
    width: $size;
    height: $size;

    &::before,&::after {
        content: '';
        @extend %ab-fill;
        background-color: $color-black;
    }


    &::before {
        margin-top: auto;
        margin-bottom: auto;
        height: 0;
        padding: 1.5px 0;
    }

    &::after {
        background: transparent;
        width: $size / 2; height: $size / 2;  
        left: 10px;
        margin: auto;
        border-width: 0;
        border-top-width: 3px;
        border-right-width: 3px;
        border-style: solid;
        transform: rotateZ(45deg);
    }
}

@mixin btn-direct($size:21px,$weight:3px) {
        position: absolute;
        top: 0;bottom: 0;
        margin-top: auto;
        margin-bottom: auto;
        width: $size; height: $size;
        cursor: pointer;

        &::after {
            content: '';
            position: absolute;
            left: 0; right: 0; top: 0; bottom: 0;
            border-width: 0;
            border-style: solid;
            border-top-width: $weight;
        }

        &.next {
            right: 15px;
            transform: rotateZ(45deg);

            &::after {
                border-right-width: $weight;
            }
        }

        &.prev {
            left: 15px;
            transform: rotateZ(-45deg);

            &::after {
                border-left-width: $weight;
            }
        }
}
// font-size and line-height
@mixin  font($f-size-level:2,$lh:0,$f-weight-level:1) {
    font-size: nth($font-size , $f-size-level);
    font-weight: nth($font-weight,$f-weight-level);
    line-height: nth($font-size , $f-size-level) + $lh;
}


// under line 
@mixin under-line($move:0px,$h:.12rem,$color:#000,$pseudo:before,$position:true) {
    @if $position { position: relative; }

    @if $pseudo == 'before' {
        &::before {
            content: '';
            position: absolute; bottom: -$move; left: 0; right: 0;
            height: 0;
            padding-top: $h / 2;
            padding-bottom: $h / 2;
            background: $color;
        }
    }

    @if $pseudo == 'after' {
        &::after {
            content: '';
            position: absolute; bottom: -$move; left: 0; right: 0;
            height: 0;
            padding-top: $h / 2;
            padding-bottom: $h / 2;
            background: $color;
        }
    }
}